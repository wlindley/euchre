JsHamcrest={version:"0.5.2",isMatcher:function(a){return a instanceof JsHamcrest.SimpleMatcher},isArraysEqual:function(g,e){if(g instanceof Array||e instanceof Array){if(g.length!=e.length){return false}for(var f=0;f<g.length;f++){var d=g[f];var c=e[f];if(d instanceof Array||c instanceof Array){return JsHamcrest.isArraysEqual(d,c)}else{if(d!=c){return false}}}return true}else{return g==e}},SimpleMatcher:function(a){a=a||{};this.matches=a.matches;this.describeTo=a.describeTo;if(a.describeValueTo){this.describeValueTo=a.describeValueTo}},CombinableMatcher:function(a){JsHamcrest.SimpleMatcher.apply(this,arguments);a=a||{};this.and=function(c){var b=JsHamcrest.Matchers.allOf(this,c);return new JsHamcrest.CombinableMatcher({matches:b.matches,describeTo:function(d){d.appendDescriptionOf(b)}})};this.or=function(c){var b=JsHamcrest.Matchers.anyOf(this,c);return new JsHamcrest.CombinableMatcher({matches:b.matches,describeTo:function(d){d.appendDescriptionOf(b)}})}},Description:function(){var a="";this.get=function(){return a};this.appendDescriptionOf=function(b){if(b){b.describeTo(this)}return this};this.append=function(b){if(b!=null){a+=b}return this};this.appendLiteral=function(b){if(b===undefined){this.append("undefined")}else{if(b===null){this.append("null")}else{if(b instanceof Array){this.appendValueList("[",", ","]",b)}else{if(typeof b=="string"){this.append('"'+b+'"')}else{if(b instanceof Function){this.append("Function")}else{this.append(b)}}}}}return this};this.appendValueList=function(f,e,b,d){this.append(f);for(var c=0;c<d.length;c++){if(c>0){this.append(e)}this.appendLiteral(d[c])}this.append(b);return this};this.appendList=function(f,e,b,d){this.append(f);for(var c=0;c<d.length;c++){if(c>0){this.append(e)}this.appendDescriptionOf(d[c])}this.append(b);return this}}};JsHamcrest.SimpleMatcher.prototype.describeValueTo=function(b,a){a.appendLiteral(b)};JsHamcrest.CombinableMatcher.prototype=new JsHamcrest.SimpleMatcher();JsHamcrest.CombinableMatcher.prototype.constructor=JsHamcrest.CombinableMatcher;JsHamcrest.Matchers={};JsHamcrest.Matchers.truth=function(){return new JsHamcrest.SimpleMatcher({matches:function(a){return a},describeTo:function(a){a.append("truth")}})};JsHamcrest.Matchers.is=function(a){if(!JsHamcrest.isMatcher(a)){a=JsHamcrest.Matchers.equalTo(a)}return new JsHamcrest.SimpleMatcher({matches:function(b){return a.matches(b)},describeTo:function(b){b.append("is ").appendDescriptionOf(a)}})};JsHamcrest.Matchers.not=function(a){if(!JsHamcrest.isMatcher(a)){a=JsHamcrest.Matchers.equalTo(a)}return new JsHamcrest.SimpleMatcher({matches:function(b){return !a.matches(b)},describeTo:function(b){b.append("not ").appendDescriptionOf(a)}})};JsHamcrest.Matchers.equalTo=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){if(a instanceof Array||b instanceof Array){return JsHamcrest.isArraysEqual(a,b)}return b==a},describeTo:function(b){b.append("equal to ").appendLiteral(a)}})};JsHamcrest.Matchers.anything=function(){return new JsHamcrest.SimpleMatcher({matches:function(a){return true},describeTo:function(a){a.append("anything")}})};JsHamcrest.Matchers.nil=function(){return new JsHamcrest.SimpleMatcher({matches:function(a){return a==null},describeTo:function(a){a.appendLiteral(null)}})};JsHamcrest.Matchers.sameAs=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b===a},describeTo:function(b){b.append("same as ").appendLiteral(a)}})};JsHamcrest.Matchers.raises=function(a){return new JsHamcrest.SimpleMatcher({matches:function(c){try{c()}catch(b){if(b.name==a){return true}else{throw b}}return false},describeTo:function(b){b.append("raises ").append(a)}})};JsHamcrest.Matchers.both=function(a){return new JsHamcrest.CombinableMatcher({matches:a.matches,describeTo:function(b){b.append("both ").appendDescriptionOf(a)}})};JsHamcrest.Matchers.either=function(a){return new JsHamcrest.CombinableMatcher({matches:a.matches,describeTo:function(b){b.append("either ").appendDescriptionOf(a)}})};JsHamcrest.Matchers.allOf=function(){var a=arguments;if(a[0] instanceof Array){a=a[0]}return new JsHamcrest.SimpleMatcher({matches:function(d){for(var b=0;b<a.length;b++){var c=a[b];if(!JsHamcrest.isMatcher(c)){c=JsHamcrest.Matchers.equalTo(c)}if(!c.matches(d)){return false}}return true},describeTo:function(b){b.appendList("("," and ",")",a)}})};JsHamcrest.Matchers.anyOf=function(){var a=arguments;if(a[0] instanceof Array){a=a[0]}return new JsHamcrest.SimpleMatcher({matches:function(d){for(var b=0;b<a.length;b++){var c=a[b];if(!JsHamcrest.isMatcher(c)){c=JsHamcrest.Matchers.equalTo(c)}if(c.matches(d)){return true}}return false},describeTo:function(b){b.appendList("("," or ",")",a)}})};JsHamcrest.Matchers.greaterThan=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b>a},describeTo:function(b){b.append("greater than ").appendLiteral(a)}})};JsHamcrest.Matchers.greaterThanOrEqualTo=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b>=a},describeTo:function(b){b.append("greater than or equal to ").appendLiteral(a)}})};JsHamcrest.Matchers.lessThan=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b<a},describeTo:function(b){b.append("less than ").appendLiteral(a)}})};JsHamcrest.Matchers.lessThanOrEqualTo=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b<=a},describeTo:function(b){b.append("less than or equal to ").append(a)}})};JsHamcrest.Matchers.notANumber=function(){return new JsHamcrest.SimpleMatcher({matches:function(a){return isNaN(a)},describeTo:function(a){a.append("not a number")}})};JsHamcrest.Matchers.even=function(){return new JsHamcrest.SimpleMatcher({matches:function(a){return a%2===0},describeTo:function(a){a.append("even")}})};JsHamcrest.Matchers.odd=function(){return new JsHamcrest.SimpleMatcher({matches:function(a){return a%2!==0},describeTo:function(a){a.append("odd")}})};JsHamcrest.Matchers.between=function(a){return new JsHamcrest.RangeMatcherBuilder({start:a})};JsHamcrest.Matchers.closeTo=function(a,b){if(!b){b=0}return new JsHamcrest.SimpleMatcher({matches:function(c){return(Math.abs(c-a)-b)<=0},describeTo:function(c){c.append("number within ").appendLiteral(b).append(" of ").appendLiteral(a)}})};JsHamcrest.RangeMatcherBuilder=function(a){a=a||{};var b=a.start;this.and=function(c){var e=c;var d=b;if(b>c){e=b;d=c}return new JsHamcrest.SimpleMatcher({matches:function(f){return f>=d&&f<=e},describeTo:function(f){f.append("between ").appendLiteral(d).append(" and ").appendLiteral(e)}})}};JsHamcrest.Matchers.equalIgnoringCase=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b.toUpperCase()==a.toUpperCase()},describeTo:function(b){b.append('equal ignoring case "').append(a).append('"')}})};JsHamcrest.Matchers.containsString=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b.indexOf(a)>=0},describeTo:function(b){b.append('contains string "').append(a).append('"')}})};JsHamcrest.Matchers.startsWith=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b.indexOf(a)===0},describeTo:function(b){b.append("starts with ").appendLiteral(a)}})};JsHamcrest.Matchers.endsWith=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b.lastIndexOf(a)+a.length==b.length},describeTo:function(b){b.append("ends with ").appendLiteral(a)}})};JsHamcrest.Matchers.matches=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return a.test(b)},describeTo:function(b){b.append("matches ").appendLiteral(a)}})};JsHamcrest.Matchers.emailAddress=function(){var a=/^([a-z0-9_\.\-\+])+\@(([a-z0-9\-])+\.)+([a-z0-9]{2,4})+$/i;return new JsHamcrest.SimpleMatcher({matches:function(b){return a.test(b)},describeTo:function(b){b.append("email address")}})};JsHamcrest.Matchers.hasMember=function(a){return new JsHamcrest.SimpleMatcher({matches:function(c){try{return a in c}catch(b){}return false},describeTo:function(b){b.append("has member ").appendLiteral(a)}})};JsHamcrest.Matchers.hasFunction=function(a){return new JsHamcrest.SimpleMatcher({matches:function(c){try{return a in c&&c[a] instanceof Function}catch(b){}return false},describeTo:function(b){b.append("has function ").appendLiteral(a)}})};JsHamcrest.Matchers.instanceOf=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return !!(b instanceof a)},describeTo:function(c){var b=a.name?a.name:"a class";c.append("instance of ").append(b)}})};JsHamcrest.Matchers.typeOf=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return(typeof b==a)},describeTo:function(b){b.append("typeof ").append('"').append(a).append('"')}})};JsHamcrest.Matchers.object=function(){return new JsHamcrest.Matchers.instanceOf(Object)};JsHamcrest.Matchers.string=function(){return new JsHamcrest.Matchers.typeOf("string")};JsHamcrest.Matchers.number=function(){return new JsHamcrest.Matchers.typeOf("number")};JsHamcrest.Matchers.bool=function(){return new JsHamcrest.Matchers.typeOf("boolean")};JsHamcrest.Matchers.func=function(){return new JsHamcrest.Matchers.typeOf("function")};JsHamcrest.Matchers.hasItem=function(a){if(!JsHamcrest.isMatcher(a)){a=JsHamcrest.Matchers.equalTo(a)}return new JsHamcrest.SimpleMatcher({matches:function(c){if(!(c instanceof Array)){return false}for(var b=0;b<c.length;b++){if(a.matches(c[b])){return true}}return false},describeTo:function(b){b.append("array contains item ").appendDescriptionOf(a)}})};JsHamcrest.Matchers.hasItems=function(){var a=[];for(var b=0;b<arguments.length;b++){a.push(JsHamcrest.Matchers.hasItem(arguments[b]))}return JsHamcrest.Matchers.allOf(a)};JsHamcrest.Matchers.everyItem=function(a){if(!JsHamcrest.isMatcher(a)){a=JsHamcrest.Matchers.equalTo(a)}return new JsHamcrest.SimpleMatcher({matches:function(c){if(!(c instanceof Array)){return false}for(var b=0;b<c.length;b++){if(!a.matches(c[b])){return false}}return true},describeTo:function(b){b.append("every item ").appendDescriptionOf(a)}})};JsHamcrest.Matchers.isIn=function(){var a=JsHamcrest.Matchers.equalTo;var b=arguments;if(b[0] instanceof Array){b=b[0]}return new JsHamcrest.SimpleMatcher({matches:function(d){for(var c=0;c<b.length;c++){if(a(b[c]).matches(d)){return true}}return false},describeTo:function(c){c.append("one of ").appendLiteral(b)}})};JsHamcrest.Matchers.oneOf=JsHamcrest.Matchers.isIn;JsHamcrest.Matchers.empty=function(){return new JsHamcrest.SimpleMatcher({matches:function(a){return a instanceof Array&&a.length===0},describeTo:function(a){a.append("empty")}})};JsHamcrest.Matchers.hasSize=function(a){if(!JsHamcrest.isMatcher(a)){a=JsHamcrest.Matchers.equalTo(a)}return new JsHamcrest.SimpleMatcher({matches:function(b){return b instanceof Array&&a.matches(b.length)},describeTo:function(b){b.append("has size ").appendDescriptionOf(a)},describeValueTo:function(c,b){if(c instanceof Array){b.append(c.length)}else{b.appendLiteral(c)}}})};JsHamcrest.Integration=function(){function a(h,g,f,c,e){var d=new JsHamcrest.Description();var b=JsHamcrest.Matchers;if(g==null){g=b.truth()}if(!JsHamcrest.isMatcher(g)){g=b.equalTo(g)}if(f){d.append(f).append(". ")}d.append("Expected ");g.describeTo(d);if(!g.matches(h)){d.append(" but was ");g.describeValueTo(h,d);c(d.get())}else{d.append(": Success");if(e){e(d.get())}}return d}this.copyMembers=function(b,c){for(var d in b){if(!(d in c)){c[d]=b[d]}}};this.JsTestDriver=function(c){c=c?c:{};var b=c.scope||window;this.copyMembers(JsHamcrest.Matchers,b);var d=function(j){var f=new Error(j);f.name="AssertError";var e=f.stack.split("\n");var g="";for(var h=0;h<e.length;h++){if(!/jshamcrest*\.js\:/i.test(e[h])){g+=e[h]+"\n"}}f.stack=g;throw f};b.assertThat=function(g,f,e){return a(g,f,e,d)}};this.JsUnitTest=function(c){c=c?c:{};var b=c.scope||JsUnitTest.Unit.Testcase.prototype;this.copyMembers(JsHamcrest.Matchers,b);b.assertThat=function(i,h,g){var e=this;var f=function(){e.pass()};var d=function(j){e.fail(j)};return a(i,h,g,d,f)}};this.YUITest=function(d){d=d?d:{};var c=d.scope||window;this.copyMembers(JsHamcrest.Matchers,c);c.Assert=YAHOO.util.Assert;var b=function(e){YAHOO.util.Assert.fail(e)};YAHOO.util.Assert.that=function(g,f,e){return a(g,f,e,b)}};this.QUnit=function(e){e=e?e:{};var d=e.scope||window;this.copyMembers(JsHamcrest.Matchers,d);var c=function(f){QUnit.ok(true,f)};var b=function(f){QUnit.ok(false,f)};d.assertThat=function(h,g,f){return a(h,g,f,b,c)}};this.jsUnity=function(e){e=e?e:{};var d=e.scope||jsUnity.env.defaultScope;var c=e.attachAssertions||false;this.copyMembers(JsHamcrest.Matchers,d);if(c){jsUnity.attachAssertions(d)}var b=function(f){throw f};d.assertThat=function(h,g,f){return a(h,g,f,b)}},this.screwunit=function(d){d=d?d:{};var c=d.scope||Screw.Matchers;this.copyMembers(JsHamcrest.Matchers,c);var b=function(e){throw e};c.assertThat=function(g,f,e){return a(g,f,e,b)}};return this};JsHamcrest.Integration=new JsHamcrest.Integration();